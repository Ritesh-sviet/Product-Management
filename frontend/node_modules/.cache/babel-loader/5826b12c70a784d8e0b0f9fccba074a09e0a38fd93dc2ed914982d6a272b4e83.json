{"ast":null,"code":"import * as Yup from \"yup\";\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport const loginInitialValue = {\n  email: \"\",\n  password: \"\"\n};\nexport const loginValidationSchema = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required !'),\n  password: Yup.string().min(6, \"minimum six character required !\").required(\"Required !\")\n});\nexport const staffInitialValue = {\n  first_name: \"\",\n  last_name: \"\",\n  address_line_1: \"\",\n  address_line_2: \"\",\n  country: \"\",\n  state: \"\",\n  city: \"\",\n  zip_code: \"\",\n  phone: \"\",\n  email: \"\",\n  password: \"\",\n  parent: \"0\",\n  status: \"\"\n};\nexport const staffValidationSchema = Yup.object({\n  first_name: Yup.string().min(2, \"insert atleast two character\").required(\"first name is required\"),\n  last_name: Yup.string().min(2, \"insert atleast two character\").required(\"last name is required\"),\n  address_line_1: Yup.string().required(\"Address is requires\"),\n  address_line_2: Yup.string(),\n  country: Yup.string().required(\"country is reuired\"),\n  state: Yup.string().required(\"state is required\"),\n  city: Yup.string().required(\"city is required\"),\n  zip_code: Yup.number().min(2, \"insert atleast two character\").required(\"zip code is required\"),\n  phone: Yup.string().matches(phoneRegExp, 'Phone number is not valid').min(2, \"insert atleast two character\").required(),\n  email: Yup.string().email().min(2, \"insert atleast two character\").required(),\n  password: Yup.string().matches(/(?=.*[a-zA-Z])(?=.*\\d)/, 'Password must contain both letters and numbers').min(6, \"password must be of atlease 6 character\").required(),\n  parent: Yup.string().required()\n});\nexport const productCategoryInitialValue = {\n  name: \"\",\n  description: \"\",\n  status: \"\"\n};\nexport const productCategoryValidationSchema = Yup.object({\n  name: Yup.string().min(3, \"atleast three character required\").required(\"category name is required\"),\n  description: Yup.string().min(3, \"atleast three character required\").required(\"category description is required\")\n});\nexport const productInitialValue = {\n  name: \"\",\n  image: \"\",\n  product_category: \"\",\n  supplier_id: \"\",\n  description: \"\",\n  mrp: \"\",\n  discount: \"\",\n  status: \"\"\n};\nexport const productValidationSchema = Yup.object({\n  name: Yup.string().min(3, \"atleast three character required\").required(\"category name is required\"),\n  description: Yup.string().min(3, \"atleast three character required\").required(\"category description is required\"),\n  image: Yup.required(\"category description is required\"),\n  product_category: Yup.string().required(\"product category is required\"),\n  supplier_id: Yup.string().required(\"supplier is required\")\n});\nexport const supplierInitialValue = {\n  supplier_name: '',\n  address_line_1: '',\n  address_line_2: '',\n  country: '',\n  state: '',\n  city: '',\n  zip_code: '',\n  phone: '',\n  email: '',\n  status: ''\n};\nexport const supplierValidationSchema = Yup.object({\n  supplier_name: Yup.string().required('supplier name is required'),\n  phone: Yup.string().required('Phone number is required'),\n  email: Yup.string().email('Invalid email').required('Email is required')\n});","map":{"version":3,"names":["Yup","phoneRegExp","loginInitialValue","email","password","loginValidationSchema","object","string","required","min","staffInitialValue","first_name","last_name","address_line_1","address_line_2","country","state","city","zip_code","phone","parent","status","staffValidationSchema","number","matches","productCategoryInitialValue","name","description","productCategoryValidationSchema","productInitialValue","image","product_category","supplier_id","mrp","discount","productValidationSchema","supplierInitialValue","supplier_name","supplierValidationSchema"],"sources":["/home/meghnab/Desktop/product management/frontend/src/form_validations/index.js"],"sourcesContent":["import * as Yup from \"yup\";\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\nexport const loginInitialValue = {\n    email: \"\",\n    password: \"\",\n};\n\nexport const loginValidationSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Required !'),\n    password: Yup.string().min(6, \"minimum six character required !\").required(\"Required !\")\n})\n\nexport const staffInitialValue = {\n    first_name: \"\",\n    last_name: \"\",\n    address_line_1: \"\",\n    address_line_2: \"\",\n    country: \"\",\n    state: \"\",\n    city: \"\",\n    zip_code: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    parent: \"0\",\n    status: \"\",\n};\n\nexport const staffValidationSchema = Yup.object({\n    first_name: Yup.string().min(2, \"insert atleast two character\").required(\"first name is required\"),\n    last_name: Yup.string().min(2, \"insert atleast two character\").required(\"last name is required\"),\n    address_line_1: Yup.string().required(\"Address is requires\"),\n    address_line_2: Yup.string(),\n    country: Yup.string().required(\"country is reuired\"),\n    state: Yup.string().required(\"state is required\"),\n    city: Yup.string().required(\"city is required\"),\n    zip_code: Yup.number().min(2, \"insert atleast two character\").required(\"zip code is required\"),\n    phone: Yup.string().matches(phoneRegExp, 'Phone number is not valid').min(2, \"insert atleast two character\").required(),\n    email: Yup.string().email().min(2, \"insert atleast two character\").required(),\n    password: Yup.string().matches(/(?=.*[a-zA-Z])(?=.*\\d)/, 'Password must contain both letters and numbers').min(6, \"password must be of atlease 6 character\").required(),\n    parent: Yup.string().required(),\n})\nexport const productCategoryInitialValue = {\n    name: \"\",\n    description: \"\",\n    status: \"\"\n};\n\nexport const productCategoryValidationSchema = Yup.object({\n    name: Yup.string().min(3, \"atleast three character required\").required(\"category name is required\"),\n    description: Yup.string().min(3, \"atleast three character required\").required(\"category description is required\"),\n})\n\nexport const productInitialValue = {\n    name: \"\",\n    image: \"\",\n    product_category: \"\",\n    supplier_id: \"\",\n    description: \"\",\n    mrp: \"\",\n    discount: \"\",\n    status: \"\",\n};\n\nexport const productValidationSchema = Yup.object({\n    name: Yup.string().min(3, \"atleast three character required\").required(\"category name is required\"),\n    description: Yup.string().min(3, \"atleast three character required\").required(\"category description is required\"),\n    image: Yup.required(\"category description is required\"),\n    product_category: Yup.string().required(\"product category is required\"),\n    supplier_id: Yup.string().required(\"supplier is required\"),\n})\n\nexport const supplierInitialValue = {\n    supplier_name: '',\n    address_line_1: '',\n    address_line_2: '',\n    country: '',\n    state: '',\n    city: '',\n    zip_code: '',\n    phone: '',\n    email: '',\n    status: ''\n};\n\nexport const supplierValidationSchema = Yup.object({\n    supplier_name: Yup.string().required('supplier name is required'),\n    phone: Yup.string().required('Phone number is required'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n})\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}